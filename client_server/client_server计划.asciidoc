= 程序设计方案 =
陈小龙 <34814491@qq.com>
v1.0, 2015-9-19
:library: Asciidoctor
:idprefix:
:numbered:
:imagesdir: images
:toc: manual
:toc-placement: preamble


:numbered!:
[abstract]
服务器客户端通信程序初步用于在windows上运行，以后移植到IOS和Android上，大部分代码用C完成。


:numbered:
== 总述 ==
--
. 采用C语言写客户端和服务器程序，用TCP进行连接和用户验证，再用UDP进行通信。服务器TCP和UDP设置到同一端口。
. 用Qt做界面，界面包括：
. log。
--


=== 服务器 ===
不知道彭哥您说的登录服务器基于UDP比较好，还是登录、保持和退出登录基于TCP比较好，我先写在这里，您先看看吧。
*主要步骤：*
--
. 主进程创建若干(4)个子进程。
. 每个子进程根据指定端口号创建TCP和UDP服务程序。
. 用select函数复用TCP和UDP的描述符。
. 若收到客户端的连接讲求，TCP与之通信。a)验证，若通过，加入信任客户列表。b)连接终止。
. 若收到客户端UDP，则执行通信操作。
. 每次通信需要发确认信息，超时提醒数据是否发送成功。
--

*注意：*
--
. 一次连接过多用户，可能导致缓冲区不够，UDP数据报被丢弃。可能要扩大缓冲区。
--

*其他：*
--
. 服务器处理客户端的TCP连接和验证时，需要新开进程还是线程？
. 需要维护100万个用户连接，实际上需要主进程维护100万个有效UDP客户端套接字，另外每个套接字需要额外一个1KB的数据结构。那么本程序设计如下结构。初始申请1万用户数据大小内存，客户数据以1万为单位，每达到1万的用户，再申请新内存。

[source,c]
----
struct con_udp_client{
    struct sockaddr_in cliaddr;
    char data[1024];
};
----

[start=3]
. 服务器是否需要自动超时重传？
--


=== 客户端 ===
*主要步骤：*
--
. 创建TCP和UDP套接字，先用TCP连接并验证。
. UDP连接服务器。
. 用select复用TCP和UDP描述符。TCP此时用于处理连接异常和连接终止。
. UDP通信。
--

*注意：*
--
. 登录时，用户名不能有空格，因为验证时要用空格作为用户名和密码的分隔符。发送用户名和密码时，密码后要跟'\0'。
--


=== 界面 ===

=== log ===

== 详细设计 ==

=== 服务器客户端 ===
服务器客户端主要分成三个模块。
--
. 通用模块，包括一些错误处理函数，socket包裹函数，一些常用宏定义等。
. 服务器，定义服务器对象数据结构及操作。
. 客户端，定义客户端对象数据结构及操作。
--

==== 通用模块 ====

==== 服务器 ====

==== 客户端 ====
